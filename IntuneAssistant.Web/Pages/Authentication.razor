@page "/authentication/{action}"
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@inject IAccessTokenProvider AccessTokenProvider
@inject Blazored.LocalStorage.ILocalStorageService LocalStorage

<RemoteAuthenticatorView Action="@Action" OnLogInSucceeded="OnLogInSucceeded"/>

@code{
    [Parameter] public string? Action { get; set; }
    private string _accessToken;

    protected override async Task OnInitializedAsync()
    {
    
        if (Action == "logout")
        {
            await LocalStorage.RemoveItemAsync("acessToken");
            Console.WriteLine("Access token removed");
        }
    }
    private async Task OnLogInSucceeded()
    {
        var tokenResult = await AccessTokenProvider.RequestAccessToken();
        if (tokenResult.TryGetToken(out var token))
        {
            await LocalStorage.SetItemAsync("accessToken", token.Value);
            Console.WriteLine("Access token: " + token.Value);
        }
    }
}
